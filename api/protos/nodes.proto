syntax = "proto3";

package mizer;

service NodesApi {
  rpc GetNodes (NodesRequest) returns (Nodes) {}
  rpc AddNode (AddNodeRequest) returns (Node) {}
  rpc AddLink (NodeConnection) returns (NodeConnection) {}
  rpc WriteControlValue (WriteControl) returns (WriteResponse) {}
  rpc UpdateNodeProperty (UpdateNodeConfigRequest) returns (UpdateNodeConfigResponse) {}
  rpc MoveNode (MoveNodeRequest) returns (MoveNodeResponse) {}
  rpc DeleteNode (DeleteNodeRequest) returns (DeleteNodeResponse) {}
}

message AddNodeRequest {
  Node.NodeType type = 1;
  NodePosition position = 2;
}

message NodesRequest {}

message WriteControl {
  string path = 1;
  string port = 2;
  double value = 3;
}

message WriteResponse {}

message UpdateNodeConfigRequest {
  string path = 1;
  NodeConfig config = 2;
}

message UpdateNodeConfigResponse {}

message MoveNodeRequest {
  string path = 1;
  NodePosition position = 2;
}

message MoveNodeResponse {}

message DeleteNodeRequest {
  string path = 1;
}

message DeleteNodeResponse {}

message Nodes {
  repeated Node nodes = 1;
  repeated NodeConnection channels = 2;
}

message NodeConnection {
  string targetNode = 1;
  Port targetPort = 2;
  string sourceNode = 3;
  Port sourcePort = 4;
  ChannelProtocol protocol = 5;
}

message Node {
  enum NodeType {
    Fader = 0;
    Button = 1;
    Oscillator = 2;
    Clock = 3;
    Script = 4;
    Envelope = 5;
    Fixture = 6;
    Sequence = 7;
    Select = 8;
    Merge = 9;
//    DmxInput = 10;
    DmxOutput = 11;
    OscInput = 12;
    OscOutput = 13;
    MidiInput = 14;
    MidiOutput = 15;
    VideoFile = 20;
    VideoOutput = 21;
    VideoEffect = 22;
    VideoColorBalance = 23;
    VideoTransform = 24;
    PixelToDmx = 30;
    PixelPattern = 31;
    OpcOutput = 32;
    Laser = 40;
    IldaFile = 41;
  }

  enum NodePreviewType {
    History = 0;
    Waveform = 1;
    Multiple = 2;
    Texture = 3;
    None = 4;
  }

  NodeType type = 1;
  string path = 2;
  repeated Port inputs = 3;
  repeated Port outputs = 4;
  NodeDesigner designer = 5;
  NodePreviewType preview = 6;
  NodeConfig config = 7;
}

message NodeConfig {
  oneof type {
    OscillatorNodeConfig oscillatorConfig = 10;
    ScriptingNodeConfig scriptingConfig = 11;
    SequenceNodeConfig sequenceConfig = 12;
    ClockNodeConfig clockConfig = 13;
    FixtureNodeConfig fixtureConfig = 14;
    InputNodeConfig buttonConfig = 15;
    InputNodeConfig faderConfig = 16;
    IldaFileNodeConfig ildaFileConfig = 17;
    LaserNodeConfig laserConfig = 18;
    PixelPatternNodeConfig pixelPatternConfig = 19;
    PixelDmxNodeConfig pixelDmxConfig = 20;
    DmxOutputNodeConfig dmxOutputConfig = 21;
    MidiInputNodeConfig midiInputConfig = 22;
    MidiOutputNodeConfig midiOutputConfig = 23;
    OpcOutputNodeConfig opcOutputConfig = 24;
    OscNodeConfig oscInputConfig = 25;
    OscNodeConfig oscOutputConfig = 26;
    VideoColorBalanceNodeConfig videoColorBalanceConfig = 27;
    VideoEffectNodeConfig videoEffectConfig = 28;
    VideoFileNodeConfig videoFileConfig = 29;
    VideoOutputNodeConfig videoOutputConfig = 30;
    VideoTransformNodeConfig videoTransformConfig = 31;
    SelectNodeConfig selectConfig = 32;
    MergeNodeConfig mergeConfig = 33;
    EnvelopeNodeConfig envelopeConfig = 34;
  }
}

message OscillatorNodeConfig {
  enum OscillatorType {
    Square = 0;
    Sine = 1;
    Saw = 2;
    Triangle = 3;
  }
  OscillatorType type = 1;
  double ratio = 2;
  double max = 3;
  double min = 4;
  double offset = 5;
  bool reverse = 6;
}

message ScriptingNodeConfig {
  string script = 1;
}

message SequenceNodeConfig {
  repeated SequenceStep steps = 1;

  message SequenceStep {
    double tick = 1;
    double value = 2;
    bool hold = 3;
  }
}

message EnvelopeNodeConfig {
  double attack = 1;
  double decay = 2;
  double sustain = 3;
  double release = 4;
}

message ClockNodeConfig {
  double speed = 1;
}

message FixtureNodeConfig {
  uint32 fixture_id = 1;
}

message InputNodeConfig {}

message IldaFileNodeConfig {
  string file = 1;
}

message LaserNodeConfig {
  string device_id = 1;
}

message PixelPatternNodeConfig {
  enum Pattern {
    RgbIterate = 0;
    RgbSnake = 1;
  }

  Pattern pattern = 1;
}

message PixelDmxNodeConfig {
  uint64 width = 1;
  uint64 height = 2;
  uint32 start_universe = 3;
  string output = 4;
}

message DmxOutputNodeConfig {
  optional string output = 1;
  uint32 universe = 2;
  uint32 channel = 3;
}

message MidiInputNodeConfig {}
message MidiOutputNodeConfig {}

message OpcOutputNodeConfig {
  string host = 1;
  uint32 port = 2;
  uint64 width = 3;
  uint64 height = 4;
}

message OscNodeConfig {
  string host = 1;
  uint32 port = 2;
  string path = 3;
}

message VideoColorBalanceNodeConfig {}
message VideoEffectNodeConfig {}
message VideoFileNodeConfig {
  string file = 1;
}
message VideoOutputNodeConfig {}
message VideoTransformNodeConfig {}

message SelectNodeConfig {}
message MergeNodeConfig {}

message NodePosition {
  double x = 1;
  double y = 2;
}

message NodeDesigner {
  NodePosition position = 1;
  double scale = 2;
  bool hidden = 3;
}

enum ChannelProtocol {
    SINGLE = 0;
    MULTI = 1;
    COLOR = 9;
    TEXTURE = 2;
    VECTOR = 3;
    LASER = 4;
    POLY = 5;
    DATA = 6;
    MATERIAL = 7;
    GST = 8;
}

message Port {
  string name = 1;
  ChannelProtocol protocol = 2;
}
